@using OpenBullet2.Helpers
@using OpenBullet2.Entities
@inject IModalService ModalService
@inject IGuestRepository GuestRepo
@inject Microsoft.Extensions.Localization.IStringLocalizer<GuestEdit> Loc

<EditForm Model="Guest">

    <label>@Loc["Username"]</label>
    <InputText @bind-Value="Guest.Username" />

    <label>@Loc["AccessExpiration"]</label>
    <InputDate @bind-Value="Guest.AccessExpiration" />

    <label>@Loc["AllowedAddresses"] (@Loc["allIfEmpty"])</label>
    <p style="color: #ccc; font-size: small;">@Loc["Example"]: 192.168.1.1,10.0.0.0/24,example.dyndns.org,::1</p>
    <InputText @bind-Value="Guest.AllowedAddresses" />

    <button type="submit" @onclick="Validate" class="btn btn-outline-success">@Loc["Ok"]</button>
</EditForm>

@code {

    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }
    [Parameter] public GuestEntity Guest { get; set; }
    private string originalUsername;

    protected override void OnParametersSet()
    {
        originalUsername = Guest.Username;
    }

    private async Task Validate()
    {
        if (string.IsNullOrEmpty(Guest.Username))
        {
            await js.AlertError(Loc["Uh-Oh"], Loc["UsernameNull"]);
            return;
        }

        if (Guest.Username.Length < 3 || Guest.Username.Length > 32)
        {
            await js.AlertError(Loc["Uh-Oh"], Loc["InvalidUsername"]);
            return;
        }

        var existingGuest = GuestRepo.GetAll().FirstOrDefault(g => g.Username == Guest.Username);

        if (originalUsername != Guest.Username && existingGuest != null)
        {
            await js.AlertError(Loc["Uh-Oh"], Loc["GuestAlreadyExists"]);
            return;
        }

        BlazoredModal.Close(ModalResult.Ok(Guest));
    }
}
